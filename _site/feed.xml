<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-01-29T13:53:28+00:00</updated><id>http://localhost:4000//</id><title type="html">Geekhole</title><subtitle>All the tech you can take.</subtitle><entry><title type="html">The App Foundation</title><link href="http://localhost:4000/android/2016/11/14/the-app-foundation/" rel="alternate" type="text/html" title="The App Foundation" /><published>2016-11-14T00:00:00+00:00</published><updated>2016-11-14T00:00:00+00:00</updated><id>http://localhost:4000/android/2016/11/14/the-app-foundation</id><content type="html" xml:base="http://localhost:4000/android/2016/11/14/the-app-foundation/">&lt;p&gt;&lt;strong&gt;The foundation of any app is very important.&lt;/strong&gt; If you’ve been developing for a while you will have your own style and way of &lt;em&gt;doing things in each app that you use&lt;/em&gt;. This is useful and helps to keep things in an order that you find easy to work with. If you’ve not been developing for that long, the task of getting into this kind of routine can be somewhat daunting. From personal experience, it wasn’t until I started programming in a professional capacity – I had been programming as a hobby for ten years previously – that I finally came to work out my own routine. I’ll admit that I did have a lot of help as well – working in an environment with other professional programmers and seeing their own styles is the best way of working your own styles out!&lt;/p&gt;

&lt;p&gt;So to help others along (and to speed up development of my own apps) I have published a project that has the basics that every project that I write has. Below are some hints and tips for using it, but hopefully if you look at the code it’s mostly self explanatory! You can find the repository here.&lt;/p&gt;

&lt;p&gt;“Please convert this into smart quotes or I’ll be upset.”&lt;/p&gt;

&lt;h2 id=&quot;my-main-points&quot;&gt;My main points&lt;/h2&gt;

&lt;p&gt;There are a few main points I want to go over. The first is that I always have a base &lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt; and a base Fragment. By this I mean that I have two abstract classes that extend &lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Fragment&lt;/code&gt; respectively. By doing this we can put in all the methods that we know we will want to access from all of our activities / fragments. The most important ones in the activity are &lt;code class=&quot;highlighter-rouge&quot;&gt;setRootFragment()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;pushFragment()&lt;/code&gt;. These two methods give us the ability to easily add new fragments without repeating code. They are probably my favourite methods out of all of them!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;So to help others along (and to speed up development of my own apps)&lt;/li&gt;
  &lt;li&gt;I have published a project that has the basics that every project that I write has.&lt;/li&gt;
  &lt;li&gt;Below are some hints and tips for using it, but hopefully if you look at the code it’s mostly self explanatory! You can find the repository here.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;second-important-method&quot;&gt;Second important method&lt;/h3&gt;

&lt;p&gt;The second important methods are &lt;code class=&quot;highlighter-rouge&quot;&gt;getLayoutId()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;onCreateWrappedView&lt;/code&gt;. The first method specifies the layout id that the fragment or activity should inflate. The second is used to do any UI setup for the activity or fragment. For example, if you inflate a layout that has a text view and you wish to assign the text view to a class wide field you would do something similar to:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreateWrappedView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;globalTextView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the fragment it is slightly different as we have to pass in the root view to be able to find the view in question – I think that’s fairly self explanatory, however!&lt;/p&gt;

&lt;h4 id=&quot;this-should-just-be-a-bold-heading&quot;&gt;This should just be a bold heading&lt;/h4&gt;

&lt;p&gt;There are some logging functions within the utils.Util class, which stop you having to put in an app tag every time. The class is also useful for putting other methods that are used app wide.&lt;/p&gt;

&lt;p&gt;The final thing to note is the Api class. I’ve added a barebones api infrastructure using &lt;code class=&quot;highlighter-rouge&quot;&gt;Retrofit2&lt;/code&gt;, which I use with a suite of managers (when I require it).&lt;/p&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Android&quot;]" /><summary type="html">The foundation of any app is very important. If you’ve been developing for a while you will have your own style and way of doing things in each app that you use. This is useful and helps to keep things in an order that you find easy to work with. If you’ve not been developing for that long, the task of getting into this kind of routine can be somewhat daunting. From personal experience, it wasn’t until I started programming in a professional capacity – I had been programming as a hobby for ten years previously – that I finally came to work out my own routine. I’ll admit that I did have a lot of help as well – working in an environment with other professional programmers and seeing their own styles is the best way of working your own styles out!</summary></entry><entry><title type="html">Android NavigationView: Icons</title><link href="http://localhost:4000/android/2016/10/30/android-navigationview-icons/" rel="alternate" type="text/html" title="Android NavigationView: Icons" /><published>2016-10-30T00:00:00+01:00</published><updated>2016-10-30T00:00:00+01:00</updated><id>http://localhost:4000/android/2016/10/30/android-navigationview-icons</id><content type="html" xml:base="http://localhost:4000/android/2016/10/30/android-navigationview-icons/">&lt;p&gt;In brief, I’ll be describing how to add icons to the Android &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationView&lt;/code&gt; component, as well as changing the colours of those icons.&lt;/p&gt;

&lt;p&gt;First we need to start off with the XML. You’ll need to start out with a &lt;code class=&quot;highlighter-rouge&quot;&gt;DrawerLayout&lt;/code&gt;, and within that include your &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationView&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;android.support.v4.widget.DrawerLayout&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/drawer_layout&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:tools=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:fitsSystemWindows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;tools:openDrawer=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;include&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;layout=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@layout/app_bar_main&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;android.support.design.widget.NavigationView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/navigation_view&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;start&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:fitsSystemWindows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:headerLayout=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@layout/nav_header_main&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:menu=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@menu/activity_main_drawer&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/android.support.v4.widget.DrawerLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You’ll also notice that here I’ve included the a layout with id &lt;code class=&quot;highlighter-rouge&quot;&gt;app_bar_main&lt;/code&gt;. This is just a layout for if you want to have a toolbar at the top of your app.&lt;/p&gt;

&lt;p&gt;The important thing to notice here for getting our icons into the &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationView&lt;/code&gt; is the &lt;code class=&quot;highlighter-rouge&quot;&gt;app:menu&lt;/code&gt; attribute. This allows us to specify a menu resource, which has the information on what items we want to place in our menu. If you are using Android Studio you can find the “menu” folder within the “res” directory. Right clicking on this folder and selecting New &amp;gt; menu resource file. A typical menu resource will look similar to this:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;menu&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;group&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:checkableBehavior=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;single&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/menu_home&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:icon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@drawable/menu_home_black&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Home&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/menu&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This XML is at the heart of adding items and icons to the menu. I’m sure from looking at this you can work out that the &lt;code class=&quot;highlighter-rouge&quot;&gt;android:title&lt;/code&gt; attribute is the title to display in the &lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationView&lt;/code&gt;, and the &lt;code class=&quot;highlighter-rouge&quot;&gt;android:icon&lt;/code&gt; attribute is similarly used to specify what drawable resource to use for the icon on the left hand side of the title.&lt;/p&gt;

&lt;p&gt;However, this isn’t all. You may notice that if you select a colour icon to be displayed (i.e. not just black and white) it will only display in black and white.This is because of the background tint that is automatically set on the items. To solve this, we need to obtain a reference to the icon in java code, and set the background tint for items to null.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;navigationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setItemIconTintList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that’s it!&lt;/p&gt;</content><author><name>Joshua Masonw</name></author><category term="[&quot;Android&quot;]" /><summary type="html">In brief, I’ll be describing how to add icons to the Android NavigationView component, as well as changing the colours of those icons.</summary></entry><entry><title type="html">The App Foundation</title><link href="http://localhost:4000/android/2016/08/10/the-app-foundation/" rel="alternate" type="text/html" title="The App Foundation" /><published>2016-08-10T00:00:00+01:00</published><updated>2016-08-10T00:00:00+01:00</updated><id>http://localhost:4000/android/2016/08/10/the-app-foundation</id><content type="html" xml:base="http://localhost:4000/android/2016/08/10/the-app-foundation/">&lt;p&gt;The foundation of any app is very important. If you’ve been developing for a while you will have your own style and way of doing things in each app that you use. This is useful and helps to keep things in an order that you find easy to work with. If you’ve not been developing for that long, the task of getting into this kind of routine can be somewhat daunting. From personal experience, it wasn’t until I started programming in a professional capacity – I had been programming as a hobby for ten years previously – that I finally came to work out my own routine. I’ll admit that I did have a lot of help as well – working in an environment with other professional programmers and seeing their own styles is the best way of working your own styles out!&lt;/p&gt;

&lt;p&gt;So to help others along (and to speed up development of my own apps) I have published a project that has the basics that every project that I write has. Below are some hints and tips for using it, but hopefully if you look at the code it’s mostly self explanatory! You can find the repository here.&lt;/p&gt;

&lt;p&gt;There are a few main points I want to go over. The first is that I always have a base &lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt; and a base Fragment. By this I mean that I have two abstract classes that extend &lt;code class=&quot;highlighter-rouge&quot;&gt;Activity&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Fragment&lt;/code&gt; respectively. By doing this we can put in all the methods that we know we will want to access from all of our activities / fragments. The most important ones in the activity are &lt;code class=&quot;highlighter-rouge&quot;&gt;setRootFragment()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;pushFragment()&lt;/code&gt;. These two methods give us the ability to easily add new fragments without repeating code. They are probably my favourite methods out of all of them!&lt;/p&gt;

&lt;p&gt;The second important methods are &lt;code class=&quot;highlighter-rouge&quot;&gt;getLayoutId()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;onCreateWrappedView&lt;/code&gt;. The first method specifies the layout id that the fragment or activity should inflate. The second is used to do any UI setup for the activity or fragment. For example, if you inflate a layout that has a text view and you wish to assign the text view to a class wide field you would do something similar to:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreateWrappedView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;globalTextView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TextView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;textView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the fragment it is slightly different as we have to pass in the root view to be able to find the view in question – I think that’s fairly self explanatory, however!&lt;/p&gt;

&lt;p&gt;There are some logging functions within the utils.Util class, which stop you having to put in an app tag every time. The class is also useful for putting other methods that are used app wide.&lt;/p&gt;

&lt;p&gt;The final thing to note is the Api class. I’ve added a barebones api infrastructure using &lt;code class=&quot;highlighter-rouge&quot;&gt;Retrofit2&lt;/code&gt;, which I use with a suite of managers (when I require it).&lt;/p&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Android&quot;]" /><summary type="html">The foundation of any app is very important. If you’ve been developing for a while you will have your own style and way of doing things in each app that you use. This is useful and helps to keep things in an order that you find easy to work with. If you’ve not been developing for that long, the task of getting into this kind of routine can be somewhat daunting. From personal experience, it wasn’t until I started programming in a professional capacity – I had been programming as a hobby for ten years previously – that I finally came to work out my own routine. I’ll admit that I did have a lot of help as well – working in an environment with other professional programmers and seeing their own styles is the best way of working your own styles out!</summary></entry><entry><title type="html">Raspberry Pi: Retropie Console</title><link href="http://localhost:4000/personal/2016/01/30/raspberry-pi-retropie-console/" rel="alternate" type="text/html" title="Raspberry Pi: Retropie Console" /><published>2016-01-30T00:00:00+00:00</published><updated>2016-01-30T00:00:00+00:00</updated><id>http://localhost:4000/personal/2016/01/30/raspberry-pi-retropie-console</id><content type="html" xml:base="http://localhost:4000/personal/2016/01/30/raspberry-pi-retropie-console/">&lt;p&gt;&lt;img src=&quot;/images/RetroPie.png&quot; alt=&quot;RetroPie.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So as you may or may not know, the Raspberry Pi 2 came out early last year in February 2015. It’s taken a long while, but finally me and my partner (mainly my partner) got around to setting up &lt;a href=&quot;http://blog.petrockblock.com/retropie/&quot;&gt;Retropie&lt;/a&gt; on one.&lt;/p&gt;

&lt;p&gt;The RetroPie project describes itself as “a collection of works that all have the overall goal to turn the Raspberry Pi into a dedicated retro-gaming console”, and it does this very well with support for early games consoles such as Dreamcast, PlayStation, and Nintendo64.&lt;/p&gt;

&lt;p&gt;But enough of that; I’m sure you’re wondering how to go about getting it all set up!&lt;/p&gt;

&lt;p&gt;Things you will need:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://uk.rs-online.com/web/p/processor-microcontroller-development-kits/832-6274/&quot;&gt;A Raspberry Pi 2 (Model B)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;An &lt;a href=&quot;http://www.amazon.co.uk/Kingston-Class10-microSDHC-Include-Adapter/dp/B0162YQG2I/ref=sr_1_3?s=electronics-accessories&amp;amp;ie=UTF8&amp;amp;qid=1454158920&amp;amp;sr=1-3&amp;amp;keywords=Micro+SD+Card&quot;&gt;SD card&lt;/a&gt; to put the RetroPie OS and game ROMs on&lt;/li&gt;
  &lt;li&gt;A power supply for the Pi (of course!)&lt;/li&gt;
  &lt;li&gt;A keyboard for setting up the Pi to begin with&lt;/li&gt;
  &lt;li&gt;A screen with a HDMI port and cable&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;http://www.amazon.co.uk/gp/product/B003VD56KC?psc=1&amp;amp;redirect=true&amp;amp;ref_=oh_aui_detailpage_o01_s00&quot;&gt;games controller&lt;/a&gt; to use with the Pi&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;http://blog.petrockblock.com/retropie/retropie-downloads/retropie-sd-card-image-for-raspberry-pi-2-2/&quot;&gt;Retropie software image&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It’s important to note that if you’re using the controller linked to above, you’ll need to make sure you also have a USB wireless receiver for the xbox controller as well, as this is not included with the controller itself.&lt;/p&gt;

&lt;p&gt;As you can see, I’ve linked to some of the products above that we personally have used, so we know that they work.&lt;/p&gt;

&lt;p&gt;We start off by burning the image of the RetroPie software to the SD card so that we can then boot from it. We’re using Apple Macs here, so the software involved is called “&lt;a href=&quot;http://www.tweaking4all.com/hardware/raspberry-pi/macosx-apple-pi-baker/&quot;&gt;ApplePie Baker&lt;/a&gt;” which takes the hassle out of burning the image correctly. If you’re using windows you can use something like the &lt;a href=&quot;http://sourceforge.net/projects/win32diskimager/&quot;&gt;Win32DiskImager&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With the SD card inserted into your mac select the IMG file and hit Restore Backup to burn the image to the SD card. This could take a while so you might want to go and grab a cup of tea (or a beer if it’s the evening!) whilst you wait.&lt;/p&gt;

&lt;p&gt;Once that’s all done we can move on to putting the SD card into the Raspberry Pi, connecting the keyboard, screen and power supply and waiting for it to boot up. TO be perfectly honest, that’s almost all you need to do… However, sometimes you’ll need to change some of the setup options.&lt;/p&gt;

&lt;p&gt;One thing that’s probably a good idea to do is expand the filesystem, which allows you to make full use of all the space on the Pi for adding game ROMs etc. Not only this but having WiFi is often preferable, so if you have a spare wifi adapter laying around you can use that too. To expand the filesystem you can use the steps &lt;a href=&quot;https://github.com/RetroPie/RetroPie-Setup/wiki/First-Installation#expand-file-system&quot;&gt;described here&lt;/a&gt;. The instructions are slightly out of date so your setup might look a little different, but the general idea of where to go and what options to select are still correct.&lt;/p&gt;

&lt;p&gt;Setting up WiFi can be found &lt;a href=&quot;https://github.com/RetroPie/RetroPie-Setup/wiki/First-Installation#configuring-wifi&quot;&gt;here&lt;/a&gt;, and is pretty simple really.&lt;/p&gt;

&lt;p&gt;The final thing you’ll want to do is be able to transfer your newly curated ROMs to the Pi so that you can use them. There are three ways to do this, depending on whether you’ve connected your Pi to your local network via ethernet or WiFi. The first, that doesn’t require a network connection, is to use a USB drive:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(ensure that your USB is formatted to FAT32)&lt;/li&gt;
  &lt;li&gt;first create a folder called retropie on your USB stick&lt;/li&gt;
  &lt;li&gt;plug it into the pi and wait for it to finish blinking&lt;/li&gt;
  &lt;li&gt;pull the USB out and plug it into a computer&lt;/li&gt;
  &lt;li&gt;add the roms to their respective folders (in the retropie/roms folder)&lt;/li&gt;
  &lt;li&gt;plug it back into the raspberry pi&lt;/li&gt;
  &lt;li&gt;wait for it to finish blinking&lt;/li&gt;
  &lt;li&gt;refresh emulationstation by pressing F4, or choosing quit from the start menu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These steps are taken directly form the &lt;a href=&quot;https://github.com/RetroPie/RetroPie-Setup/wiki/First-Installation#transferring-roms&quot;&gt;RetroPie project&lt;/a&gt; Github website.&lt;/p&gt;

&lt;p&gt;The second and third methods of transferring ROMs requires some form of network connection. I won’t go into detail of the FTP method, as that’s not one that I have tried out. Instead I’ll show you how to transfer them over a file share, which is as simple as drag and drop once it’s setup.&lt;/p&gt;

&lt;p&gt;If you’re on windows you can go into File Explorer by pressing the Windows Key + E, and in the address bar at the top type in \retropie which will bring up a list of folders on the Pi. If you’re on Mac simply open Finder, select the Go menu at the top of the screen, select Connect to Server and type in smb://retropie in the subsequent dialog box. From this, the folder you need to copy your ROMs to is aptly named ROMs.&lt;/p&gt;

&lt;p&gt;I forgot to mention, there is one last step to all of this… HAVE FUN! Go ahead and test out your newly configured RetroPie console. There’s a lot of documentation on the web of what works and what doesn’t and more configuration that you can do if you want. But for now, I’ll leave you with this, and hope you have a retrotastic time!&lt;/p&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Personal&quot;]" /><summary type="html"></summary></entry><entry><title type="html">IllegalStateException: The specified child already has a parent</title><link href="http://localhost:4000/android/2016/01/21/illegalstateexception-the-specified-child-already-has-a-parent/" rel="alternate" type="text/html" title="IllegalStateException: The specified child already has a parent" /><published>2016-01-21T00:00:00+00:00</published><updated>2016-01-21T00:00:00+00:00</updated><id>http://localhost:4000/android/2016/01/21/illegalstateexception-the-specified-child-already-has-a-parent</id><content type="html" xml:base="http://localhost:4000/android/2016/01/21/illegalstateexception-the-specified-child-already-has-a-parent/">&lt;p&gt;To be precise, this error reads:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;java.lang.IllegalStateException: The specified child already has a parent. You must call removeView() on the child’s parent first.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is an error I recently came across when trying to get a recycler view to work. At first this can seem a bit confusing, but really it is very simple. Generally it means that you’ve forgotten one tiny detail in your onCreateViewHolder method.&lt;/p&gt;

&lt;p&gt;When inflating the layout resource for your view holder, you’ll likely have a line similar to&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LayoutInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is all very well and good… except that using this version of the &lt;code class=&quot;highlighter-rouge&quot;&gt;inflate()&lt;/code&gt; method actually tells the layout that it should attach itself to the layout parent… Instead we need to tell it not to do this by using&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LayoutInflater&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inflate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The only difference here is we have added a parameter at the end; the boolean ‘false’. And that little parameter will solve all your problems! (well, perhaps not all, but at least one)&lt;/p&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Android&quot;]" /><summary type="html">To be precise, this error reads:</summary></entry><entry><title type="html">Google Play Game Services – Error 10002 (RESULT_SIGN_IN_FAILED)</title><link href="http://localhost:4000/android/2016/01/15/google-play-game-services-error-10002-result-sign-in-failed/" rel="alternate" type="text/html" title="Google Play Game Services – Error 10002 (RESULT_SIGN_IN_FAILED)" /><published>2016-01-15T00:00:00+00:00</published><updated>2016-01-15T00:00:00+00:00</updated><id>http://localhost:4000/android/2016/01/15/google-play-game-services-error-10002-result-sign-in-failed</id><content type="html" xml:base="http://localhost:4000/android/2016/01/15/google-play-game-services-error-10002-result-sign-in-failed/">&lt;p&gt;One of the newest apps I recently worked on required the use of Google Play Game Services. There’s a lot of material from Google out there on how to set this all up and get it working, and in all honesty the code is all very simple. Just one problem.&lt;/p&gt;

&lt;p&gt;After hours of trying, I could not get game services to work correctly and sign in. I had everything set up as described in the documentation, but it just wouldn’t work. After hours of googling, I finally ran across a one line throwaway comment that finally pointed me in the right direction.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/games/services/console/enabling#step_2_add_your_game_to_the_dev_console&quot;&gt;Here is the documentation&lt;/a&gt; I used to setup everything in the Play Console. The one thing I unfortunately didn’t realise was that if you created the API Console Project using google’s old style console, even if you’re using the project on the new site, it will not work.&lt;/p&gt;

&lt;p&gt;So, that said, the easiest fix was simply to remove the project from the game console and create a completely new one. You can do this by using the option entitled “I don’t use any Google APIs in my game yet”, which comes up after you click to add a new game.&lt;/p&gt;

&lt;p&gt;Hopefully this will save someone a little bit of time!&lt;/p&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Android&quot;]" /><summary type="html">One of the newest apps I recently worked on required the use of Google Play Game Services. There’s a lot of material from Google out there on how to set this all up and get it working, and in all honesty the code is all very simple. Just one problem.</summary></entry><entry><title type="html">Targeting the iPad – CSS</title><link href="http://localhost:4000/web%20development/2016/01/11/targeting-the-ipad-css/" rel="alternate" type="text/html" title="Targeting the iPad – CSS" /><published>2016-01-11T00:00:00+00:00</published><updated>2016-01-11T00:00:00+00:00</updated><id>http://localhost:4000/web%20development/2016/01/11/targeting-the-ipad-css</id><content type="html" xml:base="http://localhost:4000/web%20development/2016/01/11/targeting-the-ipad-css/">&lt;p&gt;Sometimes we want websites to look different in certain platforms. In this case we will be looking at targeting iPads with CSS to make it look different from other platforms.&lt;/p&gt;

&lt;p&gt;To do this we will be making use of media queries, which are usually used to target different screen sizes. Below are the relevant media queries required for the various iPads.&lt;/p&gt;

&lt;p&gt;iPads in portrait and landscape:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* YOUR STYLES HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;iPads in landscape:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;landscape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* YOUR STYLES HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;iPads in portrait:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;portrait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* YOUR STYLES HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ipad-3--4-queries&quot;&gt;iPad 3 &amp;amp; 4 Queries&lt;/h3&gt;

&lt;p&gt;If you want to target the iPad 3 &amp;amp; 4 then you’re in luck!&lt;/p&gt;

&lt;p&gt;Retina iPads in portrait and landscape:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Retina iPads in landscape:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;landscape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Retina iPads in portrait:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;portrait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ipad-1--2-queries&quot;&gt;iPad 1 &amp;amp; 2 Queries&lt;/h3&gt;

&lt;p&gt;Again, we can also specifically target iPads version 1 and 2.&lt;/p&gt;

&lt;p&gt;iPads 1 &amp;amp; 2 in portrait &amp;amp; landscape:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;iPads 1 &amp;amp; 2 in landscape:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;landscape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;iPads 1 &amp;amp; 2 in portrait:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;portrait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ipad-mini&quot;&gt;iPad Mini&lt;/h3&gt;

&lt;p&gt;Finally, this wouldn’t be complete without looking at the iPad Mini!&lt;/p&gt;

&lt;p&gt;iPad mini in portrait &amp;amp; landscape:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;iPad mini in landscape:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;landscape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;iPad mini in portrait:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-device-width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1024px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;portrait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* STYLES GO HERE */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Web Development&quot;]" /><summary type="html">Sometimes we want websites to look different in certain platforms. In this case we will be looking at targeting iPads with CSS to make it look different from other platforms.</summary></entry><entry><title type="html">Android – Styling the Contextual Action Mode</title><link href="http://localhost:4000/android/2015/12/02/android-styling-the-contextual-action-mode/" rel="alternate" type="text/html" title="Android – Styling the Contextual Action Mode" /><published>2015-12-02T00:00:00+00:00</published><updated>2015-12-02T00:00:00+00:00</updated><id>http://localhost:4000/android/2015/12/02/android-styling-the-contextual-action-mode</id><content type="html" xml:base="http://localhost:4000/android/2015/12/02/android-styling-the-contextual-action-mode/">&lt;p&gt;I recently found myself needing to use the &lt;a href=&quot;http://developer.android.com/guide/topics/ui/menus.html#CAB&quot;&gt;Contextual Action Mode&lt;/a&gt; functionality of Android to make things look a little more “Androidy” (I was cloning an iOS app, at a customers behest.). All went well, except for one really annoying little UI problem. The left action button was slightly off in relation to to the hamburger menu button. To fix this I needed some way of changing the padding if this item, but alas, no easy way exists of doing this. Well, I say that, but after a little bit of work it turns out it’s not that hard after all.&lt;/p&gt;

&lt;p&gt;The general idea of what I am about to describe can probably be used in other places to style android build in components where you aren’t given direct control.&lt;/p&gt;

&lt;p&gt;So, without further ado, I will explain how to change the padding on the left action button.&lt;/p&gt;

&lt;p&gt;First using the &lt;a href=&quot;https://geekhole.github.io/android/2015/09/30/android-integration-testing-ui-automator-viewer/&quot;&gt;UIAutomator tool in the Android SDK&lt;/a&gt; we can find the resource ID of all the items on the context menu. So, once you’ve implemented the Contextual Action Mode, get it up on the screen and use the tool, as described in the above link to obtain the ID. In my case the ID is R.id.action_mode_close_button.&lt;/p&gt;

&lt;p&gt;The next step is to get an actual reference to this view. This is easy; if you are within an activity you can simply use&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;action_mode_close_button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or, if you are within a fragment&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;getActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;action_mode_close_button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From there, you can enact anything on the view that you normally would. As I said, I wished to change the padding so all in all my single line of code looked similar to this:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;getActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;action_mode_close_button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPadding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So there you have it, now you can find and manipulate any view within Android that you can find!&lt;/p&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Android&quot;]" /><summary type="html">I recently found myself needing to use the Contextual Action Mode functionality of Android to make things look a little more “Androidy” (I was cloning an iOS app, at a customers behest.). All went well, except for one really annoying little UI problem. The left action button was slightly off in relation to to the hamburger menu button. To fix this I needed some way of changing the padding if this item, but alas, no easy way exists of doing this. Well, I say that, but after a little bit of work it turns out it’s not that hard after all.</summary></entry><entry><title type="html">Android MediaPlayer – A brief introduction</title><link href="http://localhost:4000/android/2015/10/28/android-mediaplayer-a-brief-introduction/" rel="alternate" type="text/html" title="Android MediaPlayer – A brief introduction" /><published>2015-10-28T00:00:00+00:00</published><updated>2015-10-28T00:00:00+00:00</updated><id>http://localhost:4000/android/2015/10/28/android-mediaplayer-a-brief-introduction</id><content type="html" xml:base="http://localhost:4000/android/2015/10/28/android-mediaplayer-a-brief-introduction/">&lt;p&gt;Recently my boss approached me to say that one of our clients wanted a custom made audio player app creating. This is something I have never touched on before, and my original thoughts on the matter were along the lines of “Oh sugar…”. But it turns out that Android has an incredibly easy to use MediaPlayer class. So the basics of what you need to know to get started:&lt;/p&gt;

&lt;p&gt;To create an instance of the &lt;code class=&quot;highlighter-rouge&quot;&gt;MediaPlayer&lt;/code&gt; class, ready to play a track you can use&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;MediaPlayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MediaPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sound_file_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is assuming that you’re trying to load a file placed in your apps raw resources folder. The context just needs to be any valid context object. From this, to play the file all you need to do is call &lt;code class=&quot;highlighter-rouge&quot;&gt;start()&lt;/code&gt;. A few of the most basic commands you might want to use include:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentPosition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCurrentPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;seekTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentPosition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;seekTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentPosition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getCurrentPosition()&lt;/code&gt; obtains the current position on the current track in milliseconds. &lt;code class=&quot;highlighter-rouge&quot;&gt;seekTo()&lt;/code&gt; takes an argument in milliseconds of where to jump to in the track. Hence, &lt;code class=&quot;highlighter-rouge&quot;&gt;seekTo(currentPosition + 1000)&lt;/code&gt; will jump 1 second forward (fast forward) in the track, and the opposite will jump back (rewind) 1 second.
&lt;code class=&quot;highlighter-rouge&quot;&gt;player.stop()&lt;/code&gt; will stop the current track. If you call &lt;code class=&quot;highlighter-rouge&quot;&gt;start()&lt;/code&gt; after &lt;code class=&quot;highlighter-rouge&quot;&gt;stop()&lt;/code&gt; has been called you will get an error.&lt;/p&gt;

&lt;p&gt;In a later post I will be showing a little more detail on how to use this class, and some ways to make managing media with it easier.&lt;/p&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Android&quot;]" /><summary type="html">Recently my boss approached me to say that one of our clients wanted a custom made audio player app creating. This is something I have never touched on before, and my original thoughts on the matter were along the lines of “Oh sugar…”. But it turns out that Android has an incredibly easy to use MediaPlayer class. So the basics of what you need to know to get started:</summary></entry><entry><title type="html">Android Integration Testing – UI Automator Viewer</title><link href="http://localhost:4000/android/2015/09/30/android-integration-testing-ui-automator-viewer/" rel="alternate" type="text/html" title="Android Integration Testing – UI Automator Viewer" /><published>2015-09-30T00:00:00+01:00</published><updated>2015-09-30T00:00:00+01:00</updated><id>http://localhost:4000/android/2015/09/30/android-integration-testing-ui-automator-viewer</id><content type="html" xml:base="http://localhost:4000/android/2015/09/30/android-integration-testing-ui-automator-viewer/">&lt;p&gt;There’s not too much to say on this one, but just because there isn’t much to say doesn’t mean it’s not an amazing piece of software! Free, and included with the Android SDK, the UI Automator Viewer is incredibly useful when writing automated tests, with Espresso or any other testing framework that requires some way of identifying views to interact with. I found information on this little gem whilst searching for best practices when writing tests using Espresso, however the information contained in this article is actually more to do with testing interactions between apps, something which is difficult (if not impossible) to do with Espresso. The link to the article in question is &lt;a href=&quot;https://developer.android.com/training/testing/ui-testing/uiautomator-testing.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The UI Automator Viewer allows you to connect a device or simulator to your  computer and then obtain a snapshot of the XML view hierarchy, including information on the resource id and all other manner of properties a view can have. The one possible downside is that it doesn’t work with custom views, instead showing the custom view as a whole, it will show the individual views within the custom view. i.e. if you have a custom view that extends an &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageView&lt;/code&gt;, and which contains a &lt;code class=&quot;highlighter-rouge&quot;&gt;TextView&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageButton&lt;/code&gt; it will show the top level item as an &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageView&lt;/code&gt;, with child items as a &lt;code class=&quot;highlighter-rouge&quot;&gt;TextView&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageButton&lt;/code&gt;. It’s not too much of a downside really…&lt;/p&gt;

&lt;p&gt;So,  if you haven’t looked at the link I posted above, the way to access this great application once you have the Android SDK is to look within the sdk/tools folder. Under this there should be a file named ‘uiautomatorviewer’. Open this, and away you go!&lt;/p&gt;</content><author><name>Joshua Mason</name></author><category term="[&quot;Android&quot;]" /><summary type="html">There’s not too much to say on this one, but just because there isn’t much to say doesn’t mean it’s not an amazing piece of software! Free, and included with the Android SDK, the UI Automator Viewer is incredibly useful when writing automated tests, with Espresso or any other testing framework that requires some way of identifying views to interact with. I found information on this little gem whilst searching for best practices when writing tests using Espresso, however the information contained in this article is actually more to do with testing interactions between apps, something which is difficult (if not impossible) to do with Espresso. The link to the article in question is here.</summary></entry></feed>
